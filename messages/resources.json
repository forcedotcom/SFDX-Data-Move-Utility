{
    "newLine": "",
    "separator": "=============",
    "source": "SOURCE",
    "target": "TARGET",
    "Step1": "STAGE 1",
    "Step2": "STAGE 2",
    "Pass1": "PASS 1",
    "Pass2": "PASS 2",
    "Pass3": "PASS 3",
    "Pass4": "PASS 4",
    "csvFile": "CSV file",
    "org": "Org",
    "sourceOrg": "%s.",
    "targetOrg": "%s.",
    "scriptFile": "%s.",
    "skipped": "Skipped",
    "noRecords": "No records",
    "insert": "Insert",
    "update": "Update",
    "delete": "Delete",
    "personContact": "Person Contact",
    "coreManifest": "Core Add-On",
    "userManifest": "Custom Add-On",
    "loaded": "Loaded %s.",
    "cantLoad": "%s is not found or could not be loaded.",
    "global": "Global",
    "canNotLoadModule": "Can not load module %s",
    "actionIsNotPermitted": "The action is not permitted.",

    "defaultPromptOptions": "y/n",
    "defaultPromptNopromptOption": "y",
    "defaultPromptSelectedOption": "n",
    "promptMessageFormat": "%s (%s)?",
    "promptDefaultOptionFormat": "%s",

    "loggerInfoString": "%s",
    "loggerInfoStringWithDate": "[%s] %s",
    "loggerWarnString": "[WARN] %s",
    "loggerWarnStringWithDate": "[%s] [WARN] %s",
    "loggerErrorString": "[ERROR] %s",
    "loggerErrorStringWithDate": "[%s] [ERROR] %s",
    "loggerImportantInfoString": "%s",
    "loggerImportantInfoStringWithDate": "[%s] %s",

    "loggerStackTraceString": "[STACK TRACE] %s",
    "loggerTimeElapsedString": "Total time elapsed: %s.",
    "loggerCommandStartedString": "Execution of the command %s has been started.",
    "loggerCommandCompletedString": "Execution of the command %s has been finished. Exit code %s (%s).",

    "fileLoggerInfoString": "\n[%s] %s",
    "fileLoggerWarnSring": "\n[%s][WARN] %s",
    "fileLoggerErrorSring": "\n[%s][ERROR] %s",
    "fileLoggerInfoStringWithoutDate": "\n%s",
    "fileLoggerWarnSringWithoutDate": "\n[WARN] %s",
    "fileLoggerErrorSringWithoutDate": "\n[ERROR] %s",

    "successfullyCompletedResult": "Command succeeded.",
    "commandInitializationErrorResult": "Command initialization error: %s.",
    "orgMetadataErrorResult": "Mismatch org metadata error: %s.",

    "commandExecutionErrorResult": "Error during execution of the command: %s.",
    "commandUnresolvableWarningResult": "Execution of the command was ABORTED due to an unresolvable warning: %s.",
    "commandAbortedByUserErrorResult": "Execution of the command was ABORTED by the user.",
    "commandAbortedByAddOnErrorResult": "Execution of the command was ABORTED by the Add-On module",
    "commandAbortedByUnexpectedError": "Execution of the command was ABORTED",
    "commandUnexpectedErrorResult": "Execution of the command was ABORTED due to unexpected error: %s.",

    "loadingCoreAddonManifestFile" : "Loading core Add-On declarations ...",
    "loadingAddon" : "Loading Add-On module %s ...",
    "missingNecessaryComponent" : "The necessary component '%s' could not be found.",


    "commandInProgress": "Command in progress ...",
    "packageScript": "Package script",
    "pluginVersion": "Plugin version: %s v%s",
    "runningVersion": "Running Plugin version",
    "runningSfdmuRunAddOnVersion": "Running Add-On Api version",
    "workingPathDoesNotExist": "The specified working directory does not exist.",
    "packageFileDoesNotExist": "Missing package.json file in the working directory.",
    "loadingPackageFile": "Loading and validating the package script ...",
    "objectWillBeExcluded": "sObject %s will be excluded from the process.",
    "noObjectsDefinedInPackageFile": "There are no objects defined to process.",
    "invalidObjectOperation": "Invalid operation %s is set for the object %s",
    "noUpdateableFieldsInTheSObject": "The SOQL query for sObject %s does not include any field can be updated or inserted.",
    "scriptJSONFormatError": "The package JSON file is not well formatted. Error message: %s.",
    "scriptJSONReadError": "The package JSON file could not be read. Error message: %s.",
    "scriptRunInSimulationMode": "\n\nNOTE! The package is running in the SIMULATION MODE\n",

    "tryingToConnectCLI": "Connecting to %s using SFDX force:org:display ...",
    "successfullyConnected": "Successfully connected to %s.",
    "tryingToConnectCLIFailed": "Attempt to connect to %s failed. Please, try to refresh your local SFDX CLI connection.",
    "sourceTargetCouldNotBeTheSame": "The source and the target could not be the same.",
    "accessToOrgExpired": "Access token to the %s has expired or the user has no access.",
    "MalformedQuery": "Malformed select query for the sObject %s: %s, error: %s.",
    "MalformedDeleteQuery": "Malformed delete query for the sObject %s: %s, error: %s.",
    "needBothOrgsToSupportPersonAccounts": "Only the % org has person accounts enabled, but the both orgs (Source and Target) must have person accounts enabled.",

    "gettingOrgMetadata": "Getting and analysing objects metadata ...",
    "gettingMetadataForSObject": "Getting metadata for %s (%s)",
    "noExternalKey": "Object %s has no required external Id field definition.",
    "objectSourceDoesNotExist": "Object %s is missing in the Source.",
    "objectTargetDoesNotExist": "Object %s is missing in the Target.",
    "processingSObject": "Processing the sObject %s ...",
    "fieldSourceDoesNtoExist": "Field %s.%s is missing in the Source.",
    "fieldTargetDoesNtoExist": "Field %s.%s is missing in the Target.",
    "missingFieldsToProcess": "There are no fields to process for %s.",
    "addedMissingParentLookupObject" : "The parent sobject %s for the lookup field %s.%s has been included into the process. The externalId is set to '%s'.",
    "failedToResolveExternalId" : "Failed to resolve external Id '%s' for the parent sobject %s. Child lookup field: %s.%s.",
    "fieldIsNotOfPolymorphicType" : "[WARNING] Object %s: the field %s is incorectly defined as a polymorphic field. The normal lookup field type has been applied.",
    "fieldMissingPolymorphicDeclaration" : "[WARNING] Object %s: the field %s is missing declaration of the referenced sObject type (e.g. %s$Account). The field will be excluded from the process.",
    "theExternalIdNotFoundInTheQuery": "[INFO] Resolution of the child lookup field %s.%s: the external Id field %s set for the sobject %s is not found in the query string of %s. %s will be used instead as the external Id for this object.",

    "dataMigrationProcessStarted": "Preparing data migration job ...",
    "buildingMigrationStaregy": "Building migration strategy ...",

    "readingCsvFileError": "Error occured while reading the CSV file %s: %s",
    "writingCsvFileError": "Error occured while writing to the CSV file %s: %s",
    "readingValuesMappingFile": "Reading the values mapping CSV file (%s)",
    "readingFieldsMappingFile": "Reading the fields mapping CSV file (%s)",
    "mappingRawCsvValues": "{%s} Transforming raw CSV values by the given mapping table.",
    "mappingRawValues": "{%s} Transforming raw values by the given mapping table.",
    "validatingAndFixingSourceCSVFiles": "Validating and repairing of the source CSV files ...",
    "validatingSourceCSVFilesSkipped": "Validation of the source CSV files was skipped.",
    "writingToCSV": "Writing to %s ...",
    "noIssuesFoundDuringCSVValidation": "There are no issues found during the last validation of the source CSV files.",
    "issuesFoundDuringCSVValidation": "During the validation of the source CSV files %s issues were found. See %s file for the details.",
    "continueTheJobPrompt": "Continue the job",
    "csvFileIsEmpty": "CSV FILE DOES NOT EXIST",
    "columnsMissingInCSV": "COLUMN DEFINED IN THE SCRIPT IS MISSING IN THE CSV FILE",
    "missingParentRecordForGivenLookupValue": "MISSING PARENT LOOKUP RECORD",
    "cantUpdateChildLookupCSVColumn": "ID COLUMN FOR THE PARENT LOOKUP OBJECT WAS DYNAMICALLY ADDED INTO THE CSV FILE. CAN'T UPDATE THE CHILD LOOKUP ID COLUMN BECAUSE THE NECESSARY REFERENCE EXTERNAL ID COLUMN WAS NOT FOUND.",
    "csvFilesWereUpdated": "Amount of updated source CSV files: %s",
    "validationAndFixingsourceCSVFilesCompleted": "Validating and repairing of the source CSV files have finished.",
    "unableToDeleteTargetDirectory" : "Unable to clean-up the target directory: '%s'. Check whether any files is busy by another application.",
    "unableToDeleteSourceDirectory": "Unable to clean-up the souce directory: '%s'. Check whether any files is busy by another application.",
    "unableToDeleteCacheDirectory": "Unable to clean-up the cache directory: '%s'. Check whether any files is busy by another application.",
    "productionModificationApprovalPrompt": "WARNING! The Tool has detected that you are about to modify the production environment.\nTo confirm the action and to continue, please, enter the domain name",

    "preparingJob": "Preparing has been finished.",
    "executingJob": "Ready to process the data.",
    "executionOrder": "Order of objects to update data",
    "queryingOrder": "Order of objects to retrieve data",
    "deletingOrder": "Order of objects to delete data",

    "unprocessedRecord": "Unprocessed record.",
    "invalidRecordHashcode": "Invalid record hashcode. Unable to find matching record from the response returned by the bulk job.",
    "apiOperationFailed": "{%s} The %s API operation FAILED.",
    "apiOperationProcessError": "{%s} The %s API operation FAILED with message: %s.",
    "apiOperationJobCreated": "[Job# %s:%s] {%s} The job has been created. Uploading data ...",
    "apiOperationBatchCreated": "[Batch# %s:%s] {%s} The batch has been created. Uploading data ...",
    "apiOperationDataUploaded": "[Batch# %s:%s] {%s} The data has been uploaded. Processing ...",
    "apiOperationInProgress": "[Batch# %s:%s] {%s} Processing ... %s records processed, %s records failed.",
    "apiOperationCompleted": "[Batch# %s:%s] {%s} Completed. %s records processed, %s records failed.",
    "apiOperationWarnCompleted": "[Batch# %s:%s] {%s} Incompleted. %s records processed, %s records failed.",
    "apiOperationStarted": "{%s} The %s API operation has been started using %s%s.",
    "apiOperationFinished": "{%s} The %s API operation has been finished.",
    "invalidApiOperation": "Invalid Api operation",
    "unexpectedApiError": "Unexpected Api error",
    "simulationMode": " (SIMULATION MODE)",

    "filterOperationFailed": "Error in targetRecordsFilter module %s: %s",
    "filterUnknown": "Unknown filter %s",
    "badwordsDetectStart": "{%s} Filtering results on badwords from file %s on %s...",
    "badwordsDetectEnd": "{%s} %s records has been filtered",
    "badwordsDetectFileError": "Badwords file not found at location %s",
    "badwordsDetectRegex": "Full badwords detection regular expression %s",
    "badwordsDetected": "- %s: %s",

    "gettingRecordsCount": "ANALYSING THE OVERALL DATA VOLUME ...",
    "totalRecordsAmount": "{%s} Total amount of the %s records should be retrieved by the object's SOQL query: %s",

    "deletingTargetData": "Deleting old data from the Target ...",
    "deletingSourceData": "Deleting data from the Source ...",


    "deletingTargetSObjectRecords": "{%s} Deleting old records from the Target ...",
    "deletingSourceSObjectRecords": "{%s} Deleting records from the Source ...",

    "deletingNRecordsWillBeDeleted": "{%s} Number of records to Delete: %s.",
    "deletingRecordsCompleted": "{%s} Deleting records has been completed.",
    "nothingToDelete": "{%s} No records to delete.",
    "nothingToDelete2": "No data to delete.",

    "deletingDataCompleted": "Deleting data has been completed.",
    "deletingDataSkipped": "Deleting data was skipped.",

    "mappingQuery": "{%s} Mapping query string ... The target object: %s. The target query string: %s.",
    "mappingSourceRecords": "{%s} Mapping records to be sent to the API ... The target object: %s.",
    "mappingTargetRecords": "{%s} Mapping records returned from the API ... The target object: %s.",
    "retrievingData": "Retrieving the data %s ...",
    "retrievingDataCompleted": "Retrieving the data %s has been completed.",
    "queryingAll": "{%s} Retrieving the %s data from %s (%s: all records) ...",
    "queryingIn": "{%s} Retrieving the %s data from %s (%s: filtered records) ...",
    "queryingIn2": "{%s} Retrieving the %s data (filtered records) ...",
    "retrievingBinaryData": "{%s} Retrieving binary data. It may take a while ...",
    "queryingSelfReferenceRecords": "{%s} Retrieving self-referenced lookup records from %s ...",
    "queryingFinished": "{%s} Retrieving the %s data has been completed. Fetched %s new records.",
    "queryingTotallyFetched": "{%s} Total retrieved within all stages (source/target): %s records.",
    "queryString": "{%s} Query string: %s.",
    "fetchingSummary": "Data retrieving summary",
    "apiCallProgress": "In progress... Completed %s records.",


    "updatingTarget": "Updating the Target %s ...",
    "deletingTarget": "Deleting the Target %s ...",
    "updatingTargetNRecordsWillBeUpdated": "{%s} Number of records to %s: %s.",
    "updatingTargetObjectCompleted": "{%s} Updating the Target has been completed. Processed %s records.",
    "updatingTargetCompleted": "Updating the Target (%s) has been completed. Total processed %s records.",
    "writingToFile": "{%s} Writing to the file %s.",
    "nothingUpdated": "Nothing was updated",
    "skippedUpdatesWarning": "{%s} [INFO] There are %s skipped target updates, since no matching was found between the source and the target records by the given ExternalId key, or the data is the same.",
    "missingParentLookupsPrompt": "{%s} %s missing parent lookup records were found. See %s file for the details.",
    "updatingSummary": "Data processing summary",
    "updatingTotallyUpdated": "{%s} Total processed within all stages (Insert + Update): %s records.",

    "processingAddon": "Processing Add-On event handlers ...",
    "runAddonMethod": "{%s} Executing of the event:%s Add-On handlers has started",
    "nothingToProcess": "No Add-On modules found to process.",
    "startAddonExecute" : "[%s] {%s} Executing of the Add-On module has started",
    "finishAddonExecute" : "[%s] {%s} Executing of the Add-On module has finished",
    "coreAddonMessageTemplate" : "[%s] {%s} %s",
    "runAddonMethodCompleted": "{%s} Executing of the event:%s Add-On handlers has finished",
    "jobAbortedByAddon": "The job has been aborted by the Add-On module.",

    "writingToCacheFile": "{%s} Writing to the cache file: %s.",
    "readingFromCacheFile": "{%s} Reading from the cache file: %s."

}
